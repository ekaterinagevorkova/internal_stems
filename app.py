import streamlit as st

st.set_page_config(page_title="PNG ‚Üí WebP / HTML5 + –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Å—ã–ª–æ–∫", layout="centered")

st.title("üñº PNG ‚Üí WebP / HTML5 + –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Å—ã–ª–∫–∏")

st.markdown("## üîó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Å—ã–ª–æ–∫")

base_url = st.text_input("–û—Å–Ω–æ–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞")

link_type = st.radio("–¢–∏–ø –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤", ["ref", "utm"])

def parse_multi_input(value):
    raw = value.replace(",", "\n").replace(" ", "\n")
    return [line.strip() for line in raw.split("\n") if line.strip()]

# REF-—Ä–µ–∂–∏–º
if link_type == "ref":
    st.markdown("### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –≤—ã–Ω–æ—Å–æ–≤ (–º–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–∫–∏)")

    ref = st.text_input("ref")
    ref1 = st.text_input("ref1")
    ref2 = st.text_input("ref2")
    ref3 = st.text_input("ref3")
    ref4 = st.text_input("ref4")

    if base_url and ref:
        parsed_fields = {
            "ref": parse_multi_input(ref),
            "ref1": parse_multi_input(ref1),
            "ref2": parse_multi_input(ref2),
            "ref3": parse_multi_input(ref3),
            "ref4": parse_multi_input(ref4),
        }

        # –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
        max_count = max(len(v) for v in parsed_fields.values() if v)

        st.markdown("### üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
        for i in range(max_count):
            params = []
            for key, values in parsed_fields.items():
                if values:
                    val = values[i % len(values)]
                    params.append(f"{key}={val}")
            result = f"{base_url}?" + "&".join(params)
            st.code(result, language="html")

# UTM-—Ä–µ–∂–∏–º
elif link_type == "utm":
    st.markdown("### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã UTM (–º–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–∫–∏)")

    utm_source = st.text_input("utm_source")
    utm_medium = st.text_input("utm_medium")
    utm_campaign = st.text_input("utm_campaign")
    utm_content = st.text_input("utm_content")
    utm_term = st.text_input("utm_term")

    if base_url and utm_source and utm_medium and utm_campaign:
        parsed_fields = {
            "utm_source": parse_multi_input(utm_source),
            "utm_medium": parse_multi_input(utm_medium),
            "utm_campaign": parse_multi_input(utm_campaign),
            "utm_content": parse_multi_input(utm_content),
            "utm_term": parse_multi_input(utm_term),
        }

        max_count = max(len(v) for v in parsed_fields.values() if v)

        st.markdown("### üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
        for i in range(max_count):
            params = []
            for key, values in parsed_fields.items():
                if values:
                    val = values[i % len(values)]
                    params.append(f"{key}={val}")
            result = f"{base_url}?" + "&".join(params)
            st.code(result, language="html")
